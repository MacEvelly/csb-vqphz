{"version":3,"sources":["components/3D/Lights.jsx","components/UX/SectionHolder.jsx","components/UX/Sections/SplashScreen.jsx","components/UX/Sections/FaceScan.jsx","components/UX/Sections/ModelEditor.jsx","utility/useApp.jsx","components/3D/Controls.jsx","components/3D/models/Character.jsx","components/3D/models/Face.jsx","components/3D/models/Pedestal.jsx","components/3D/Scene3D.jsx","components/UX/HUD.jsx","utility/AddLeva.jsx","App.js","index.js"],"names":["Lights","Spot1","useRef","Spot2","Directional","useEffect","current","lookAt","intensity","ref","position","castShadow","angle","penumbra","memo","children","console","log","BtnGoToSection","useApp","state","SectionHolder","onClick","avatar","setAvatar","dance","setDance","colors","color1","setColor1","color2","setColor2","CHolder","Prev","Next","useState","slideNum","setSlideNum","Slide","Dir","style","opacity","className","transform","map","B","src","alt","c","i","backgroundColor","D","sectionObj","SplashScreen","FaceScan","ModelEditor","sectionKeys","Object","keys","sectionKey","section","create","set","get","init","ARSupportCheck","debugMode","getURLVars","window","location","URL","Face","URLSearchParams","search","MeshURL","url","callback","request","XMLHttpRequest","open","setRequestHeader","onprogress","event","target","status","toString","abort","send","ifUrlExist","correct","setFaceMesh","showLeva","document","getElementById","remove","elem","createElement","id","innerHTML","onclick","cssText","body","appendChild","FaceMesh","BodyMesh","setBodyMesh","SceneMesh","setSceneMesh","FirstName","setFirstName","LastName","setLastName","Email","setEmail","Terms","setTerms","setBodyIndex","accessory","setAccessory","setActionIndex","Friend1","setFriend1","Friend2","setFriend2","Friend3","setFriend3","GroupCapture","FaceHolder","Assets","Body","Groups","Nodes","setNodes","entries","forEach","name","regExer","filtered","filter","key","test","organized","value","visible","AName","replace","push","length","headHolder","setHeadHolder","Actions","setActions","ActionIndex","setBody","BodyIndex","Cone","Cube","Sphere","Torus","None","setAssets","AssetIndex","setAssetIndex","m","setSection","goToOverlay","useCallback","gl","arBtn","setGL","scene","setScene","camera","setCamera","controls","setControls","controlsEnabled","CameraTo","cameraPos","zoom","useSpring","newZoom","newPos","newLookAt","enabled","onRest","onStart","onChange","fov","ARSupport","a","navigator","xr","isSessionSupported","ARSession","ARStarted","session","setSession","AREnded","ARActivate","requestSession","requiredFeatures","domOverlay","root","then","BtnEnterAR","USDZLink","SetUSDZ","exporter","USDZExporter","parse","arraybuffer","blob","Blob","type","rel","href","createObjectURL","download","click","BtnUSDZ","grabModel","obj","rotation","scale","child","makeModel","uuid","material","geometry","ModelLibrary","Path","nodes","useGLTF","Controls","myCamera","myControls","numberRange","max","min","step","useControls","x","y","z","collapsed","tX","tY","tZ","useThree","PerspectiveCamera","makeDefault","near","far","OrbitControls","maxPolarAngle","Math","PI","Model","props","group","animations","useAnimations","actions","names","node","reset","fadeIn","play","fadeOut","dispose","userData","object","receiveShadow","skeleton","faceRef","add","mesh_0","metalness","preload","color","Pedestal","attach","args","Scene3D","count","colorManagement","shadowMap","pixelRatio","devicePixelRatio","fallback","HUD","AnimatePresence","exitBeforeEnter","AddLeva","everything","actionBtns","n","button","accessoriesBtns","bodyBtns","sections","k","hidden","App","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.c3a1ef06.chunk.js","sourcesContent":["import { memo, useRef, useEffect } from \"react\";\r\nimport { SpotLight } from \"@react-three/drei\";\r\nimport { useHelper } from \"@react-three/drei\";\r\nimport * as THREE from \"three\";\r\n\r\nfunction Lights() {\r\n  const Spot1 = useRef();\r\n  //useHelper(Spot1, THREE.SpotLightHelper, \"cyan\");\r\n  const Spot2 = useRef();\r\n  //useHelper(Spot2, THREE.SpotLightHelper, \"cyan\");\r\n  const Directional = useRef();\r\n  //useHelper(Directional, THREE.DirectionalLightHelper, \"cyan\");\r\n\r\n  useEffect(() => {\r\n    //console.log(Spot1.current.target);\r\n    Spot1.current.lookAt = [1, 1, 1];\r\n  }, [Spot1, Spot2]);\r\n\r\n  return (\r\n    <group>\r\n      <ambientLight intensity={0.3} />\r\n      <directionalLight\r\n        ref={Directional}\r\n        intensity={0.5}\r\n        position={[0, 3, 3]}\r\n        castShadow\r\n        shadow-mapSize-height={1024}\r\n        shadow-mapSize-width={1024}\r\n      />\r\n      <spotLight\r\n        lookAt={[1, 1, 1]}\r\n        ref={Spot1}\r\n        angle={0.25}\r\n        penumbra={0.5}\r\n        intensity={0.2}\r\n        position={[1, 4, 2]}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        castShadow\r\n        shadow-bias={-0.001}\r\n      />\r\n      <spotLight\r\n        ref={Spot2}\r\n        angle={0.25}\r\n        penumbra={0.5}\r\n        intensity={0.2}\r\n        position={[-1, 4, 2]}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        castShadow\r\n        shadow-bias={-0.001}\r\n      />\r\n    </group>\r\n  );\r\n}\r\n\r\nexport default memo(Lights);\r\n","export default ({ children }) => {\r\n  return <section>{children}</section>;\r\n};\r\n","import SectionHolder from \"../SectionHolder\";\r\nimport { useApp } from \"../../../utility/useApp\";\r\n\r\nexport default () => {\r\n  console.log(\"Splash Screen\");\r\n  const BtnGoToSection = useApp((state) => state.BtnGoToSection);\r\n  /***\r\n   * ToDo:\r\n   * - Check if AR compatable\r\n   * - iOS\r\n   * - Mobile or Desktop\r\n   * - Did User enter with Face Scan QR code\r\n   * - Returning or first time?\r\n   ***/\r\n  return (\r\n    <SectionHolder>\r\n      <div>\r\n        <h2>Splash Screen</h2>\r\n        {/* <button onClick={BtnGoToSection(\"InformationForm\")}> */}\r\n        <button onClick={BtnGoToSection(\"FaceScan\")}>Start Experience</button>\r\n      </div>\r\n    </SectionHolder>\r\n  );\r\n};\r\n","import SectionHolder from \"../SectionHolder\";\r\nimport { useApp } from \"../../../utility/useApp\";\r\n\r\nexport default () => {\r\n  console.log(\"Face Scan\");\r\n  const BtnGoToSection = useApp((state) => state.BtnGoToSection);\r\n  return (\r\n    <SectionHolder>\r\n      <div>\r\n        <h2>Face Scan</h2>\r\n        <button onClick={BtnGoToSection(\"ModelEditor\")}>\r\n          Start Experience\r\n        </button>\r\n      </div>\r\n    </SectionHolder>\r\n  );\r\n};\r\n","import SectionHolder from \"../SectionHolder\";\r\nimport { useApp } from \"../../../utility/useApp\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default () => {\r\n  console.log(\"Model Editor\");\r\n  //const BtnGoToSection = useApp((state) => state.BtnGoToSection);\r\n\r\n  const avatar = useApp((state) => state.avatar);\r\n  const setAvatar = useApp((state) => state.setAvatar);\r\n  const dance = useApp((state) => state.dance);\r\n  const setDance = useApp((state) => state.setDance);\r\n  const colors = useApp((state) => state.colors);\r\n\r\n  const color1 = useApp((state) => state.color1);\r\n  const setColor1 = useApp((state) => state.setColor1);\r\n\r\n  const color2 = useApp((state) => state.color2);\r\n  const setColor2 = useApp((state) => state.setColor2);\r\n\r\n  const AvatarOpt = [1, 2, 3, 4];\r\n  const DanceOpt = [1, 2, 3, 4];\r\n\r\n  const CHolder = useRef();\r\n  const Prev = useRef();\r\n  const Next = useRef();\r\n\r\n  const slideTotal = 3;\r\n  const [slideNum, setSlideNum] = useState(0);\r\n  const Slide = (Dir) => {\r\n    let tempSlide;\r\n    if (Dir > 0) {\r\n      tempSlide = slideNum + Dir >= slideTotal ? slideTotal : slideNum + Dir;\r\n    } else {\r\n      tempSlide = slideNum + Dir <= 0 ? 0 : slideNum + Dir;\r\n    }\r\n\r\n    setSlideNum(tempSlide);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Prev.current.style.opacity = 1;\r\n    Next.current.style.opacity = 1;\r\n    if (slideNum === 0) {\r\n      Prev.current.style.opacity = 0;\r\n    }\r\n    if (slideNum === slideTotal) {\r\n      Next.current.style.opacity = 0;\r\n    }\r\n  }, [slideNum]);\r\n\r\n  return (\r\n    <SectionHolder>\r\n      <div>\r\n        <ul\r\n          ref={CHolder}\r\n          className=\"CustomHolder\"\r\n          style={{ transform: `translateX(${100 * -slideNum}%)` }}\r\n        >\r\n          <li>\r\n            <h3>Avatar</h3>\r\n            <ul>\r\n              {AvatarOpt.map((B) => (\r\n                <li key={\"avatar\" + B}>\r\n                  <img\r\n                    className={B === avatar ? \"active\" : null}\r\n                    onClick={() => setAvatar(B)}\r\n                    src={`https://via.placeholder.com/50x90.png?text=Body+${B}`}\r\n                    alt={`img${B}`}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h3>Color 1</h3>\r\n            <ul className=\"swatches\">\r\n              {colors.map((c, i) => (\r\n                <li\r\n                  key={\"color1\" + i}\r\n                  className={i === color1 ? \"active\" : null}\r\n                  onClick={() => setColor1(i)}\r\n                  style={{ backgroundColor: c }}\r\n                ></li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h3>Color 2</h3>\r\n            <ul className=\"swatches\">\r\n              {colors.map((c, i) => (\r\n                <li\r\n                  key={\"color2\" + i}\r\n                  className={i === color2 ? \"active\" : null}\r\n                  onClick={() => setColor2(i)}\r\n                  style={{ backgroundColor: c }}\r\n                ></li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h3>Dance</h3>\r\n            <ul>\r\n              {DanceOpt.map((D) => (\r\n                <li key={\"dance\" + D}>\r\n                  <img\r\n                    className={D === dance ? \"active\" : null}\r\n                    onClick={() => setDance(D)}\r\n                    src={`https://via.placeholder.com/50x90.png?text=Dance+${D}`}\r\n                    alt={`img${D}`}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <nav>\r\n          <h3 ref={Prev} onClick={() => Slide(-1)}>\r\n            {\"<\"} Prev\r\n          </h3>\r\n          <h3 ref={Next} onClick={() => Slide(1)}>\r\n            Next {\">\"}\r\n          </h3>\r\n        </nav>\r\n      </div>\r\n    </SectionHolder>\r\n  );\r\n};\r\n","import create from \"zustand\";\r\nimport { useCallback } from \"react\";\r\nimport { useSpring } from \"react-spring-three\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { USDZExporter } from \"three/examples/jsm/exporters/USDZExporter.js\";\r\n\r\n// Sections\r\nimport SplashScreen from \"../components/UX/Sections/SplashScreen\";\r\n//import InformationForm from \"../components/UX/Sections/InformationForm\";\r\nimport FaceScan from \"../components/UX/Sections/FaceScan\";\r\nimport ModelEditor from \"../components/UX/Sections/ModelEditor\";\r\n//import ScanFriends from \"../components/UX/Sections/ScanFriends\";\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Default Variables\r\n/////////////////////////////////////////////////////////////////////////////////////\r\nconst debug = 1;\r\nconst showLeva = 0;\r\nconst version = 0.1;\r\n\r\nconst sectionObj = {\r\n  SplashScreen: <SplashScreen />,\r\n  //InformationForm: <InformationForm />,\r\n  FaceScan: <FaceScan />,\r\n  ModelEditor: <ModelEditor />\r\n  //ScanFriends: <ScanFriends />\r\n};\r\nconst sectionKeys = Object.keys(sectionObj);\r\nconst sectionKey = sectionKeys[2];\r\nconst section = sectionObj[sectionKey];\r\n\r\nconst colors = [\r\n  \"#66AFD4\",\r\n  \"#0057B8\",\r\n  \"#001963\",\r\n  \"#593217\",\r\n  \"#008F00\",\r\n  \"#00533A\",\r\n  \"#EDDBA9\",\r\n  \"#E1AD43\",\r\n  \"#F6DA4A\",\r\n  \"#FF8200\",\r\n  \"#FE5C00\",\r\n  \"#C85100\",\r\n  \"#E21833\",\r\n  \"#C41E3A\",\r\n  \"#800000\",\r\n  \"#531B93\",\r\n  \"#FFFFFF\",\r\n  \"#C0C0C0\",\r\n  \"#777777\",\r\n  \"#000000\"\r\n];\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n// Store\r\n/////////////////////////////////////////////////////////////////////////////////////\r\nexport const useApp = create((set, get) => ({\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // Init\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  init: () => {\r\n    console.log(\"init\");\r\n    get().ARSupportCheck();\r\n    get().debugMode(true);\r\n    get().getURLVars(window.location);\r\n  },\r\n  getURLVars: (URL) => {\r\n    function ifUrlExist(url, callback) {\r\n      let request = new XMLHttpRequest();\r\n      request.open(\"GET\", url, true);\r\n      request.setRequestHeader(\r\n        \"Content-Type\",\r\n        \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n      );\r\n      request.setRequestHeader(\"Accept\", \"*/*\");\r\n      request.onprogress = function (event) {\r\n        let status = event.target.status;\r\n        let statusFirstNumber = status.toString()[0];\r\n        switch (statusFirstNumber) {\r\n          case \"2\":\r\n            request.abort();\r\n            return callback(true);\r\n          default:\r\n            request.abort();\r\n            return callback(false);\r\n        }\r\n      };\r\n      request.send(\"\");\r\n    }\r\n    const searchParams1 = new URLSearchParams(URL.search);\r\n    const Face = searchParams1.get(\"f\");\r\n    const MeshURL = `https://fanscan-bucket.s3.amazonaws.com/headmesh/${Face}.glb`;\r\n    if (Face) {\r\n      ifUrlExist(MeshURL, (correct) => {\r\n        if (correct) {\r\n          console.log(\"Good url.  Face: \", Face);\r\n          get().setFaceMesh(MeshURL);\r\n        } else {\r\n          console.log(\"Bad url\");\r\n        }\r\n      });\r\n    }\r\n  },\r\n  showLeva,\r\n  debugMode: () => {\r\n    // stops console logs\r\n    if (!debug) {\r\n      set((state) => ({ showLeva: 0 }));\r\n      if (!window.console) window.console = {};\r\n      var methods = [\"log\", \"debug\", \"warn\", \"info\"];\r\n      for (var i = 0; i < methods.length; i++) {\r\n        console[methods[i]] = function () {};\r\n      }\r\n    } else {\r\n      if (document.getElementById(\"debug\")) {\r\n        document.getElementById(\"debug\").remove();\r\n      }\r\n      var elem = document.createElement(\"div\");\r\n      elem.id = \"debug\";\r\n      elem.innerHTML = version;\r\n      elem.onclick = () => set((state) => ({ showLeva: !get().showLeva }));\r\n      elem.style.cssText = `\r\n          cursor: pointer;\r\n          color:white;\r\n          position:absolute;\r\n          top:5px;\r\n          left:5px;\r\n          height:45px;\r\n          width:45px;\r\n          opacity:0.3;\r\n          z-index:1000;\r\n          background:#000;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          user-select: none;  \r\n          border-radius: 15px;\r\n      `;\r\n      document.body.appendChild(elem);\r\n    }\r\n  },\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // Global Vars\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  ////////////////////////// GLB Files\r\n  FaceMesh: \"https://fanscan-bucket.s3.amazonaws.com/headmesh/Face.glb\",\r\n  setFaceMesh: (FaceMesh) => set((state) => ({ FaceMesh })),\r\n  BodyMesh: null,\r\n  setBodyMesh: (BodyMesh) => set((state) => ({ BodyMesh })),\r\n  SceneMesh: null,\r\n  setSceneMesh: (SceneMesh) => set((state) => ({ SceneMesh })),\r\n  ////////////////////////// Personal Info\r\n  FirstName: null,\r\n  setFirstName: (FirstName) => {\r\n    set((state) => ({ FirstName }));\r\n  },\r\n  LastName: null,\r\n  setLastName: (LastName) => set((state) => ({ LastName })),\r\n  Email: null,\r\n  setEmail: (Email) => set((state) => ({ Email })),\r\n  Terms: false,\r\n  setTerms: (Terms) => set((state) => ({ Terms })),\r\n  ////////////////////////// Custom Mesh Options\r\n  avatar: null,\r\n  setAvatar: (avatar) => {\r\n    set((state) => ({ avatar }));\r\n    get().setBodyIndex(avatar);\r\n  },\r\n  accessory: null,\r\n  setAccessory: (accessory) => set((state) => ({ accessory })),\r\n  dance: null,\r\n  setDance: (dance) => {\r\n    set((state) => ({ dance }));\r\n    get().setActionIndex(dance);\r\n  },\r\n  colors,\r\n  color1: 0,\r\n  setColor1: (color1) => {\r\n    set((state) => ({ color1 }));\r\n  },\r\n  color2: 1,\r\n  setColor2: (color2) => set((state) => ({ color2 })),\r\n  ////////////////////////// Friends\r\n  Friend1: null,\r\n  setFriend1: (Friend1) => set((state) => ({ Friend1 })),\r\n  Friend2: null,\r\n  setFriend2: (Friend2) => set((state) => ({ Friend2 })),\r\n  Friend3: null,\r\n  setFriend3: (Friend3) => set((state) => ({ Friend3 })),\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // Model Options\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  GroupCapture: {\r\n    FaceHolder: /Holder/,\r\n    Assets: /Asset/,\r\n    Body: /body/gi\r\n  },\r\n  Groups: {},\r\n  Nodes: null,\r\n  setNodes: (Nodes) => {\r\n    set((state) => ({ Nodes }));\r\n    const Groups = get().Groups;\r\n    console.log(Nodes);\r\n    Object.entries(get().GroupCapture).forEach(([name, regExer]) => {\r\n      const filtered = Object.entries(Nodes).filter(([key, value]) =>\r\n        regExer.test(key)\r\n      );\r\n      const organized = {};\r\n      filtered.forEach(([name, value]) => {\r\n        value.visible = false;\r\n        const AName = name.replace(/[^_]*_([^-]*)-.*/, \"$1\");\r\n        if (!organized[AName]) {\r\n          organized[AName] = [value];\r\n        } else {\r\n          organized[AName].push(value);\r\n        }\r\n      });\r\n      if (Object.keys(organized).length !== 0) {\r\n        Groups[name] = organized;\r\n      }\r\n    });\r\n    set((state) => ({ Groups }));\r\n    console.log(get().Groups);\r\n    if (Groups.Assets) set((state) => ({ Assets: Groups.Assets }));\r\n    // const group = Object.entries(Nodes).filter(([key, value]) => /asset/gi.test(key));\r\n    // console.log({ group });\r\n    // Object.entries(Nodes).map((k) => {\r\n    //   if (/Asset/.test(k[0])) {\r\n    //     //k[1].visible = false;\r\n    //     const AName = k[0].replace(/[^_]*_([^-]*)-.*/g, \"$1\");\r\n    //     if (!assets[AName]) {\r\n    //       assets[AName] = [k[1]];\r\n    //     } else {\r\n    //       assets[AName].push(k[1]);\r\n    //     }\r\n    //   }\r\n    // });\r\n  },\r\n  // Head Holder\r\n  headHolder: null,\r\n  setHeadHolder: (headHolder) => set((state) => ({ headHolder })),\r\n  // Actions\r\n  Actions: [\r\n    \"Dance1\",\r\n    \"Dance2\",\r\n    \"Dance3\",\r\n    \"Dance4\",\r\n    \"Dance5\",\r\n    \"Dance6\",\r\n    \"Dance7\",\r\n    \"Idle\",\r\n    \"T-Pose\"\r\n  ],\r\n  setActions: (Actions) => set((state) => ({ Actions })),\r\n  ActionIndex: 7,\r\n  setActionIndex: (ActionIndex) => set((state) => ({ ActionIndex })),\r\n  // Body\r\n  Body: [\r\n    \"Character_Aunt_02\",\r\n    \"Character_Daughter_01\",\r\n    \"Character_Father_01\",\r\n    \"Character_Mother_01\",\r\n    \"Character_SchoolBoy_01\",\r\n    \"Character_SchoolGirl_01\",\r\n    \"Character_ShopKeeper_01\",\r\n    \"Character_Son_01\",\r\n    \"Character_Uncle_02\"\r\n  ],\r\n  setBody: (Body) => set((state) => ({ Body })),\r\n  BodyIndex: 0,\r\n  setBodyIndex: (BodyIndex) => set((state) => ({ BodyIndex })),\r\n  // Assets\r\n  Assets: {\r\n    Cone: [],\r\n    Cube: [],\r\n    Sphere: [],\r\n    Torus: [],\r\n    None: []\r\n  },\r\n  setAssets: (Assets) => set((state) => ({ Assets })),\r\n  AssetIndex: 0,\r\n  setAssetIndex: (AssetIndex) => {\r\n    const Assets = get().Assets;\r\n    Object.entries(Assets).forEach(([key, item]) => {\r\n      Assets[key].forEach((m) => {\r\n        m.visible = key === AssetIndex ? true : false;\r\n      });\r\n      // assets[k[0]].forEach((m) => {\r\n      //   m.visible = k[0] === AssetIndex ? true : false;\r\n      // });\r\n    });\r\n    set((state) => ({ AssetIndex }));\r\n  },\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // HUD Navigation & Phases\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  section,\r\n  sectionObj,\r\n  sectionKey,\r\n  sectionKeys,\r\n  setSection: (sectionKey) => {\r\n    const section = get().sectionObj[sectionKey];\r\n    set((state) => ({ section, sectionKey }));\r\n  },\r\n  BtnGoToSection: (goToOverlay) => {\r\n    return useCallback(() => {\r\n      // if passed variable isn't in phases show available phases\r\n      if (!sectionObj[goToOverlay]) {\r\n        console.log(`${goToOverlay} is not in phases`);\r\n        console.log(get().sectionKeys);\r\n        return;\r\n      }\r\n      // set phase\r\n      console.log(\"Going To:\", goToOverlay);\r\n      get().setSection(goToOverlay);\r\n    }, [goToOverlay]);\r\n  },\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // React-Three-Fiber\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  gl: null,\r\n  arBtn: null,\r\n  setGL: (gl) => {\r\n    console.log(`GL Set:${gl}`);\r\n    set((state) => ({ gl }));\r\n  },\r\n  scene: null,\r\n  setScene: (scene) => {\r\n    console.log(`Scene Set:${scene}`);\r\n    set((state) => ({ scene }));\r\n  },\r\n  camera: null,\r\n  setCamera: (camera) => {\r\n    console.log(`Camera Set:${camera}`);\r\n    set((state) => ({ camera }));\r\n  },\r\n  controls: null,\r\n  setControls: (controls) => {\r\n    console.log(`Controls Set:${controls}`);\r\n    set((state) => ({ controls }));\r\n  },\r\n  controlsEnabled: true,\r\n  CameraTo: (cameraPos, lookAt, zoom) => {\r\n    useSpring({\r\n      newZoom: zoom,\r\n      newPos: cameraPos,\r\n      newLookAt: lookAt,\r\n      enabled: true,\r\n      onRest: ({ enabled }) => {\r\n        set((state) => ({ controlsEnabled: true }));\r\n      },\r\n      onStart: ({ enabled }) => {\r\n        set((state) => ({ controlsEnabled: true }));\r\n      },\r\n      onChange: ({ newPos, newZoom }) => {\r\n        get().camera.current.fov = newZoom;\r\n        get().camera.current.position.set(newPos[0], newPos[1], newPos[2]);\r\n      }\r\n    });\r\n  },\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // AR Session\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  ARSupport: false,\r\n  ARSupportCheck: async () => {\r\n    const ARSupport =\r\n      navigator.xr &&\r\n      navigator.xr.isSessionSupported &&\r\n      (await navigator.xr.isSessionSupported(\"immersive-ar\"));\r\n    console.log(\"ARSupportCheck: \" + ARSupport);\r\n    set((state) => ({ ARSupport }));\r\n  },\r\n  ARSession: null,\r\n  ARStarted: async (session) => {\r\n    console.log(\"ARStarted\" + session);\r\n    const gl = get().gl;\r\n    //gl.xr.setReferenceSpaceType(\"local\");\r\n    await gl.xr.setSession(session);\r\n    set((state) => ({ ARSession: session }));\r\n  },\r\n  AREnded: () => {\r\n    console.log(\"AREnded\");\r\n  },\r\n  ARActivate: async () => {\r\n    console.log(\"ARActivate\");\r\n    try {\r\n      await navigator.xr\r\n        .requestSession(\"immersive-ar\", {\r\n          requiredFeatures: [\"hit-test\", \"dom-overlay\"],\r\n          domOverlay: { root: document.body }\r\n        })\r\n        .then((session) => get().ARStarted(session));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n  BtnEnterAR: () => {\r\n    return useCallback(() => get().ARActivate(), []);\r\n  },\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // USDZ Exporter\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  USDZLink: null,\r\n  SetUSDZ: async (scene) => {\r\n    console.log(\"SetUSDZ\");\r\n    const exporter = new USDZExporter();\r\n    const arraybuffer = await exporter.parse(scene);\r\n    const blob = new Blob([arraybuffer], { type: \"application/octet-stream\" });\r\n\r\n    const USDZLink = document.createElement(\"a\");\r\n    USDZLink.appendChild(document.createElement(\"img\"));\r\n    USDZLink.rel = \"ar\";\r\n    USDZLink.href = URL.createObjectURL(blob);\r\n    USDZLink.download = \"asset.usdz\";\r\n    USDZLink.click();\r\n\r\n    set((state) => ({ USDZLink }));\r\n  },\r\n  BtnUSDZ: () => {\r\n    return useCallback(() => {\r\n      get().SetUSDZ(get().scene);\r\n      //get().USDZLink.click();\r\n    }, []);\r\n  },\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  // Model Library\r\n  /////////////////////////////////////////////////////////////////////////////////////\r\n  grabModel: (obj) => {\r\n    switch (obj.type) {\r\n      case \"Group\":\r\n      case \"Object3D\":\r\n        return (\r\n          <group\r\n            name={obj.name}\r\n            key={obj.uuid}\r\n            position={obj.position}\r\n            rotation={obj.rotation}\r\n            scale={obj.scale}\r\n          >\r\n            {obj.children.map((child) => get().makeModel(child))}\r\n          </group>\r\n        );\r\n      case \"Mesh\":\r\n        return (\r\n          <mesh\r\n            name={obj.name}\r\n            key={obj.uuid}\r\n            material={obj.material}\r\n            geometry={obj.geometry}\r\n            position={obj.position}\r\n            rotation={obj.rotation}\r\n            scale={obj.scale}\r\n          />\r\n        );\r\n      case \"PointLight\":\r\n        return (\r\n          <pointLight\r\n            key={obj.uuid}\r\n            intensity={obj.intensity * 0.1}\r\n            position={obj.position}\r\n            rotation={obj.rotation}\r\n            scale={obj.scale}\r\n          />\r\n        );\r\n      case \"PerspectiveCamera\":\r\n        return <perspectiveCamera key={obj.uuid} {...obj} />;\r\n      default:\r\n        console.log(obj);\r\n        return null;\r\n    }\r\n  },\r\n  ModelLibrary: (Path) => {\r\n    const { nodes } = useGLTF(Path);\r\n    const ModelLibrary = {};\r\n    Object.keys(nodes).forEach((key) => {\r\n      if (key === \"Scene\") return;\r\n      ModelLibrary[key] = get().grabModel(nodes[key]);\r\n    });\r\n    return ModelLibrary;\r\n  }\r\n}));\r\n","import React, { useRef, memo, useEffect } from \"react\";\r\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\r\nimport { useThree } from \"@react-three/fiber\";\r\nimport { useApp } from \"../../utility/useApp\";\r\nimport { useControls } from \"leva\";\r\n\r\nfunction Controls() {\r\n  const myCamera = useRef();\r\n  const myControls = useRef();\r\n\r\n  const numberRange = (value, max = 25, min = -25, step = 0.001) => {\r\n    return { value, min, max, step };\r\n  };\r\n\r\n  const { x, y, z, fov } = useControls(\r\n    \"Camera\",\r\n    {\r\n      x: numberRange(0),\r\n      y: numberRange(0),\r\n      z: numberRange(7),\r\n      fov: numberRange(25)\r\n    },\r\n    { collapsed: true }\r\n  );\r\n  const { tX, tY, tZ } = useControls(\r\n    \"Target / Orbit Pivot\",\r\n    {\r\n      tX: numberRange(0, 5, -5),\r\n      tY: numberRange(0.5, 5, -5),\r\n      tZ: numberRange(0, 5, -5)\r\n    },\r\n    { collapsed: true }\r\n  );\r\n\r\n  const setControls = useApp((state) => state.setControls);\r\n  useEffect(() => setControls(myControls), [myControls, setControls]);\r\n\r\n  const { gl, scene, camera } = useThree();\r\n\r\n  const setGL = useApp((state) => state.setGL);\r\n  useEffect(() => setGL(gl), [gl, setGL]);\r\n\r\n  const setScene = useApp((state) => state.setScene);\r\n  useEffect(() => setScene(scene), [scene, setScene]);\r\n\r\n  const setCamera = useApp((state) => state.setCamera);\r\n  useEffect(() => setCamera(camera), [camera, setCamera]);\r\n\r\n  return (\r\n    <>\r\n      <PerspectiveCamera\r\n        makeDefault\r\n        ref={myCamera}\r\n        position={[x, y, z]}\r\n        fov={fov}\r\n        near={1}\r\n        far={10}\r\n      />\r\n      <OrbitControls\r\n        ref={myControls}\r\n        camera={myCamera.current}\r\n        target={[tX, tY, tZ]}\r\n        maxPolarAngle={Math.PI / 2}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default memo(Controls);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\r\nimport { useApp } from \"../../../utility/useApp\";\r\n\r\nexport default function Model(props) {\r\n  const group = useRef();\r\n\r\n  const setNodes = useApp((state) => state.setNodes);\r\n  const Body = useApp((state) => state.Body);\r\n  const BodyIndex = useApp((state) => state.BodyIndex);\r\n\r\n  const { nodes, animations } = useGLTF(\"./glb/Characters.glb\");\r\n  const { actions, names } = useAnimations(animations, group);\r\n\r\n  const ActionIndex = useApp((state) => state.ActionIndex);\r\n  const setActions = useApp((state) => state.setActions);\r\n\r\n  const filtered = Object.entries(nodes).filter(\r\n    ([key, node]) => /head/g.test(key) && node.type === \"Bone\"\r\n  );\r\n\r\n  const setHeadHolder = useApp((state) => state.setHeadHolder);\r\n  setHeadHolder(filtered[0][1]);\r\n\r\n  useEffect(() => setNodes(nodes), [setNodes, nodes]);\r\n  useEffect(() => setActions(names), [setActions, names]);\r\n  useEffect(() => {\r\n    actions[names[ActionIndex]].reset().fadeIn(0.3).play();\r\n    return () => actions[names[ActionIndex]].fadeOut(0.3);\r\n  }, [ActionIndex, actions, names]);\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group\r\n          name=\"MainArmature\"\r\n          position={[0, 0, 0]}\r\n          rotation={[Math.PI / 2, 0, 0]}\r\n          scale={[0.01, 0.01, 0.01]}\r\n          userData={{ name: \"MainArmature\" }}\r\n        >\r\n          <primitive object={nodes.root} />\r\n          <skinnedMesh\r\n            castShadow\r\n            receiveShadow\r\n            name={Body[BodyIndex]}\r\n            geometry={nodes[Body[BodyIndex]].geometry}\r\n            skeleton={nodes[\"Character_Aunt_02\"].skeleton}\r\n            material={nodes[\"Character_Aunt_02\"].material}\r\n            userData={{ name: Body[BodyIndex] }}\r\n          />\r\n        </group>\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"./glb/Characters.glb\");\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useApp } from \"../../../utility/useApp\";\r\n\r\nexport default function Model(props) {\r\n  const group = useRef();\r\n  const faceRef = useRef();\r\n\r\n  const FaceMesh = useApp((state) => state.FaceMesh);\r\n  const { nodes } = useGLTF(FaceMesh);\r\n  const headHolder = useApp((state) => state.headHolder);\r\n\r\n  useEffect(() => {\r\n    if (headHolder) {\r\n      faceRef.current.position.set(-0.49, -0.55, 0.27);\r\n      faceRef.current.rotation.set(-0.55, 0, 0);\r\n      group.current.scale.set(125, 125, 125);\r\n      headHolder.add(group.current);\r\n    }\r\n  }, [headHolder]);\r\n\r\n  nodes.mesh_0.material.metalness = 0;\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        ref={faceRef}\r\n        geometry={nodes.mesh_0.geometry}\r\n        material={nodes.mesh_0.material}\r\n      />\r\n    </group>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\nimport { useApp } from \"../../../utility/useApp\";\r\n\r\nconst color = \"#009fdb\";\r\n\r\nexport default function Pedestal(props) {\r\n  return (\r\n    <group>\r\n      <mesh castShadow receiveShadow position={[0, -0.125, 0]}>\r\n        <cylinderBufferGeometry\r\n          attach=\"geometry\"\r\n          args={[0.75, 0.75, 0.25, 32]}\r\n        />\r\n        <meshStandardMaterial color={color} />\r\n      </mesh>\r\n      <mesh\r\n        castShadow\r\n        receiveShadow\r\n        rotation={[-Math.PI * 0.5, 0, 0]}\r\n        position={[0, -0.25, 0]}\r\n      >\r\n        <planeBufferGeometry attach=\"geometry\" args={[200, 200]} />\r\n        <meshStandardMaterial attach=\"material\" color={color} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n}\r\n","import { Suspense } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Box } from \"@react-three/drei\";\r\n\r\nimport Lights from \"./Lights\";\r\nimport Controls from \"./Controls\";\r\nimport Character from \"./models/Character\";\r\nimport Face from \"./models/Face\";\r\nimport Pedestal from \"./models/Pedestal\";\r\nimport { useApp } from \"../../utility/useApp\";\r\n\r\nexport default function Scene3D() {\r\n  console.count(\"scene3D\");\r\n  const colors = useApp((state) => state.colors);\r\n  const color1 = useApp((state) => state.color1);\r\n  const color2 = useApp((state) => state.color2);\r\n  return (\r\n    <Canvas colorManagement shadowMap pixelRatio={window.devicePixelRatio}>\r\n      <fog attach=\"fog\" args={[\"#0057b8\", 7.5, 10]} />\r\n      <Lights />\r\n      <Controls />\r\n      <Suspense fallback={null}>\r\n        <Character />\r\n        <Pedestal />\r\n        <Face />\r\n        <Box args={[0.25, 0.25, 0.25]} position={[0.75, 0.8, 0]}>\r\n          <meshPhongMaterial attach=\"material\" color={colors[color1]} />\r\n        </Box>\r\n        <Box args={[0.25, 0.25, 0.25]} position={[0.75, 0.5, 0]}>\r\n          <meshPhongMaterial attach=\"material\" color={colors[color2]} />\r\n        </Box>\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useApp } from \"../../utility/useApp\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nexport default function HUD() {\r\n  const sectionKey = useApp((state) => state.sectionKey);\r\n  const section = useApp((state) => state.section);\r\n  return (\r\n    <main className={`HUD ${sectionKey}`}>\r\n      <AnimatePresence exitBeforeEnter>{section}</AnimatePresence>\r\n    </main>\r\n  );\r\n}\r\n","import { Leva, button, useControls } from \"leva\";\r\nimport { useApp } from \"./useApp\";\r\n\r\nexport default function AddLeva() {\r\n  const sectionKeys = useApp((state) => state.sectionKeys);\r\n  const BtnGoToSection = useApp((state) => state.BtnGoToSection);\r\n  const everything = useApp();\r\n\r\n  /////////////////////////////////////////\r\n  /// Character\r\n  /////////////////////////////////////////\r\n  var actionBtns = {};\r\n  const Actions = useApp((state) => state.Actions);\r\n  const setActionIndex = useApp((state) => state.setActionIndex);\r\n  Actions.forEach((n, i) => (actionBtns[n] = button(() => setActionIndex(i))));\r\n  useControls(\"Animation\", actionBtns, { collapsed: false });\r\n\r\n  /////////////////////////////////////////\r\n  /// Accessories\r\n  /////////////////////////////////////////\r\n  var accessoriesBtns = {};\r\n  const Assets = useApp((state) => state.Assets);\r\n  const setAssetIndex = useApp((state) => state.setAssetIndex);\r\n  Object.keys(Assets).forEach(\r\n    (n, i) => (accessoriesBtns[n] = button(() => setAssetIndex(n)))\r\n  );\r\n  useControls(\"Accessories\", accessoriesBtns, { collapsed: false });\r\n\r\n  /////////////////////////////////////////\r\n  /// Animation\r\n  /////////////////////////////////////////\r\n  var bodyBtns = {};\r\n  const Body = useApp((state) => state.Body);\r\n  const setBodyIndex = useApp((state) => state.setBodyIndex);\r\n  Body.forEach((n, i) => (bodyBtns[n] = button(() => setBodyIndex(i))));\r\n  useControls(\"Bodys\", bodyBtns, { collapsed: false });\r\n\r\n  const sections = {};\r\n  sectionKeys.map((k) => (sections[k] = button(BtnGoToSection(k))));\r\n  useControls(\"Go To Section overlay\", sections, { collapsed: true });\r\n  useControls({\r\n    \"Log useApp()\": button(() => console.log(everything))\r\n  });\r\n\r\n  // const BtnUSDZ = useApp((state) => state.BtnUSDZ);\r\n  // const BtnEnterAR = useApp((state) => state.BtnEnterAR);\r\n  // useControls(\r\n  //   \"AR\",\r\n  //   {\r\n  //     \"Apple / USDZ\": button(BtnUSDZ()),\r\n  //     WebAR: button(BtnEnterAR())\r\n  //   },\r\n  //   { collapsed: true }\r\n  // );\r\n\r\n  const showLeva = useApp((state) => state.showLeva);\r\n  return <Leva collapsed hidden={!showLeva} />;\r\n}\r\n","import { useEffect } from \"react\";\nimport Scene3D from \"./components/3D/Scene3D\";\nimport HUD from \"./components/UX/HUD\";\nimport AddLeva from \"./utility/AddLeva\";\n\nimport \"./styles/styles.css\";\n\nimport { useApp } from \"./utility/useApp\";\n\nexport default function App() {\n  const init = useApp((state) => state.init);\n  useEffect(() => init(), [init]);\n  return (\n    <>\n      <Scene3D />\n      <HUD />\n      <AddLeva />\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"App\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}